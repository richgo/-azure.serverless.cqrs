{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "databaseAccounts_cqrs_name": {
      "defaultValue": null,
      "type": "SecureString"
    },
    "sites_CqrsFunctionApp_name": {
      "defaultValue": "CqrsFunctionApp",
      "type": "String"
    },
    "connections_documentdb_name": {
      "defaultValue": "documentdb",
      "type": "String"
    },
    "connections_azureeventgrid_name": {
      "defaultValue": "azureeventgrid",
      "type": "String"
    },
    "serverfarms_NorthEuropePlan_name": {
      "defaultValue": "NorthEuropePlan",
      "type": "String"
    },
    "databaseAccounts_cqrs_name_1": {
      "defaultValue": "cqrs",
      "type": "String"
    },
    "components_CqrsFunctionApp_name": {
      "defaultValue": "CqrsFunctionApp",
      "type": "String"
    },
    "storageAccounts_cqrsstorage_name": {
      "defaultValue": "cqrsstorage",
      "type": "String"
    },
    "workflows_Command.Supercharger_name": {
      "defaultValue": "Command.Supercharger",
      "type": "String"
    },
    "config_web_name": {
      "defaultValue": "web",
      "type": "String"
    },
    "connections_azureeventgridpublish_name": {
      "defaultValue": "azureeventgridpublish",
      "type": "String"
    },
    "hostNameBindings_cqrsfunctionapp.azurewebsites.net_name": {
      "defaultValue": "cqrsfunctionapp.azurewebsites.net",
      "type": "String"
    },
    "LogicAppLocation": {
      "type": "string",
      "minLength": 1,
      "allowedValues": [
        "[resourceGroup().location]",
        "northeurope"
      ],
      "defaultValue": "northeurope"
    }
  },
  "variables": {},
  "resources": [
    {
      "comments": "Generalized from resource: '/subscriptions/48907828-43c9-4318-b511-33933c6de1ad/resourceGroups/RG_Serverless_CQRS/providers/Microsoft.DocumentDB/databaseAccounts/cqrs'.",
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "kind": "GlobalDocumentDB",
      "name": "[parameters('databaseAccounts_cqrs_name_1')]",
      "apiVersion": "2015-04-08",
      "location": "North Europe",
      "tags": {
        "defaultExperience": "DocumentDB"
      },
      "scale": null,
      "properties": {
        "databaseAccountOfferType": "Standard",
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session",
          "maxIntervalInSeconds": 5,
          "maxStalenessPrefix": 100
        },
        "name": "[parameters('databaseAccounts_cqrs_name')]"
      },
      "dependsOn": []
    },
    {
      "comments": "Generalized from resource: '/subscriptions/48907828-43c9-4318-b511-33933c6de1ad/resourceGroups/RG_Serverless_CQRS/providers/microsoft.insights/components/CqrsFunctionApp'.",
      "type": "microsoft.insights/components",
      "kind": "web",
      "name": "[parameters('components_CqrsFunctionApp_name')]",
      "apiVersion": "2014-04-01",
      "location": "northeurope",
      "tags": {
        "hidden-link:/subscriptions/48907828-43c9-4318-b511-33933c6de1ad/resourceGroups/RG_Serverless_CQRS/providers/Microsoft.Web/sites/CqrsFunctionApp": "Resource"
      },
      "scale": null,
      "properties": {
        "ApplicationId": "[parameters('components_CqrsFunctionApp_name')]"
      },
      "dependsOn": []
    },
    {
      "comments": "Generalized from resource: '/subscriptions/48907828-43c9-4318-b511-33933c6de1ad/resourceGroups/RG_Serverless_CQRS/providers/Microsoft.Logic/workflows/Command.Supercharger'.",
      "type": "Microsoft.Logic/workflows",
      "name": "[parameters('workflows_Command.Supercharger_name')]",
      "apiVersion": "2016-06-01",
      "location": "[parameters('LogicAppLocation')]",
      "tags": {
        "displayName": "LogicApp"
      },
      "scale": null,
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "Create_or_update_document": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['documentdb']['connectionId']"
                  }
                },
                "method": "post",
                "body": "@variables('bodyWithId')",
                "headers": {
                  "x-ms-documentdb-is-upsert": false
                },
                "path": "/dbs/@{encodeURIComponent('cqrs')}/colls/@{encodeURIComponent('eventstore')}/docs"
              },
              "runAfter": {
                "Set_ID": [
                  "Succeeded"
                ]
              }
            },
            "Parse_JSON": {
              "type": "ParseJson",
              "inputs": {
                "content": "@triggerBody()",
                "schema": {
                  "properties": {
                    "command": {
                      "properties": {
                        "supercharger_serial": {
                          "type": "string",
                          "required": true
                        }
                      },
                      "type": "object"
                    },
                    "command_name": {
                      "type": "string"
                    },
                    "received": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "runAfter": {}
            },
            "Publish_Event": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azureeventgridpublish']['connectionId']"
                  }
                },
                "method": "post",
                "body": [
                  {
                    "id": "@body('Create_or_update_document')?['id']",
                    "subject": "supercharger",
                    "eventType": "@body('Parse_JSON')?['command_name']",
                    "data": "@body('Parse_JSON')"
                  }
                ],
                "path": "/eventGrid/api/events"
              },
              "runAfter": {
                "Create_or_update_document": [
                  "Succeeded"
                ]
              }
            },
            "Response_2": {
              "type": "Response",
              "inputs": {
                "statusCode": 200,
                "headers": {
                  "Content-Type": "application/text"
                },
                "body": "command added to enventstore"
              },
              "runAfter": {
                "Publish_Event": [
                  "Succeeded"
                ]
              }
            },
            "Set_ID": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "bodyWithId",
                    "type": "string",
                    "value": "@{addProperty(body('Parse_JSON'),'id',guid())}"
                  }
                ]
              },
              "runAfter": {
                "Switch": [
                  "Succeeded"
                ]
              }
            },
            "Switch": {
              "type": "Switch",
              "expression": "@body('Parse_JSON')?['command_name']",
              "cases": {
                "Case": {
                  "case": "installed",
                  "actions": {
                    "Parse_JSON_2": {
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('Parse_JSON')",
                        "schema": {
                          "properties": {
                            "command": {
                              "properties": {
                                "lat": {
                                  "required": true,
                                  "type": "number"
                                },
                                "location_name": {
                                  "required": true,
                                  "type": "string"
                                },
                                "long": {
                                  "required": true,
                                  "type": "number"
                                },
                                "supercharger_serial": {
                                  "required": true,
                                  "type": "string"
                                },
                                "supercharger_type": {
                                  "required": true,
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "command_name": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "received": {
                              "format": "date-time",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "runAfter": {}
                    }
                  }
                },
                "Case_2": {
                  "case": "serviced",
                  "actions": {
                    "Parse_JSON_3": {
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('Parse_JSON')",
                        "schema": {
                          "properties": {
                            "command": {
                              "properties": {
                                "supercharger_serial": {
                                  "required": true,
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "command_name": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "received": {
                              "format": "date-time",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "runAfter": {}
                    }
                  }
                },
                "Case_3": {
                  "case": "inuse",
                  "actions": {
                    "Parse_JSON_4": {
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('Parse_JSON')",
                        "schema": {
                          "properties": {
                            "command": {
                              "properties": {
                                "supercharger_serial": {
                                  "required": true,
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "command_name": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "received": {
                              "format": "date-time",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "runAfter": {}
                    }
                  }
                },
                "Case_4": {
                  "case": "notinuse",
                  "actions": {
                    "Parse_JSON_5": {
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('Parse_JSON')",
                        "schema": {
                          "properties": {
                            "command": {
                              "properties": {
                                "supercharger_serial": {
                                  "required": true,
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "command_name": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "received": {
                              "format": "date-time",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "runAfter": {}
                    }
                  }
                },
                "Case_6": {
                  "case": "decommisioned",
                  "actions": {
                    "Parse_JSON_6": {
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('Parse_JSON')",
                        "schema": {
                          "properties": {
                            "command": {
                              "properties": {
                                "supercharger_serial": {
                                  "required": true,
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "command_name": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "received": {
                              "format": "date-time",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "runAfter": {}
                    }
                  }
                }
              },
              "default": {
                "actions": {
                  "Response": {
                    "type": "Response",
                    "inputs": {
                      "statusCode": 444,
                      "headers": {
                        "Content-Type": "application/text"
                      },
                      "body": "Invalid command recieved"
                    },
                    "runAfter": {}
                  }
                }
              },
              "runAfter": {
                "Parse_JSON": [
                  "Succeeded"
                ]
              }
            }
          },
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "manual": {
              "type": "Request",
              "kind": "Http",
              "inputs": {
                "schema": {},
                "method": "POST"
              }
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "documentdb": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', 'northeurope', '/managedApis/', 'documentdb')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_documentdb_name'))]",
                "connectionName": "[parameters('connections_documentdb_name')]"
              },
              "azureeventgridpublish": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', 'northeurope', '/managedApis/', 'azureeventgridpublish')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_azureeventgridpublish_name'))]",
                "connectionName": "[parameters('connections_azureeventgridpublish_name')]"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('connections_documentdb_name'))]",
        "[resourceId('Microsoft.Web/connections', parameters('connections_azureeventgridpublish_name'))]"
      ]
    },
    {
      "comments": "Generalized from resource: '/subscriptions/48907828-43c9-4318-b511-33933c6de1ad/resourceGroups/RG_Serverless_CQRS/providers/Microsoft.Storage/storageAccounts/cqrsstorage'.",
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "Storage",
      "name": "[parameters('storageAccounts_cqrsstorage_name')]",
      "apiVersion": "2017-06-01",
      "location": "northeurope",
      "tags": {},
      "scale": null,
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "encryption": {
          "services": {
            "file": {
              "enabled": true
            },
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }
      },
      "dependsOn": []
    },
    {
      "comments": "Generalized from resource: '/subscriptions/48907828-43c9-4318-b511-33933c6de1ad/resourceGroups/RG_Serverless_CQRS/providers/Microsoft.Web/connections/azureeventgrid'.",
      "type": "Microsoft.Web/connections",
      "name": "[parameters('connections_azureeventgrid_name')]",
      "apiVersion": "2016-06-01",
      "location": "northeurope",
      "scale": null,
      "properties": {
        "displayName": "live.com#richard_gobbett@hotmail.com",
        "customParameterValues": {},
        "api": {
          "id": "[concat('/subscriptions/48907828-43c9-4318-b511-33933c6de1ad/providers/Microsoft.Web/locations/northeurope/managedApis/', parameters('connections_azureeventgrid_name'))]"
        }
      },
      "dependsOn": []
    },
    {
      "comments": "Generalized from resource: '/subscriptions/48907828-43c9-4318-b511-33933c6de1ad/resourceGroups/RG_Serverless_CQRS/providers/Microsoft.Web/connections/azureeventgridpublish'.",
      "type": "Microsoft.Web/connections",
      "name": "[parameters('connections_azureeventgridpublish_name')]",
      "apiVersion": "2016-06-01",
      "location": "northeurope",
      "scale": null,
      "properties": {
        "displayName": "eventgrid",
        "customParameterValues": {},
        "api": {
          "id": "[concat('/subscriptions/48907828-43c9-4318-b511-33933c6de1ad/providers/Microsoft.Web/locations/northeurope/managedApis/', parameters('connections_azureeventgridpublish_name'))]"
        }
      },
      "dependsOn": []
    },
    {
      "comments": "Generalized from resource: '/subscriptions/48907828-43c9-4318-b511-33933c6de1ad/resourceGroups/RG_Serverless_CQRS/providers/Microsoft.Web/connections/documentdb'.",
      "type": "Microsoft.Web/connections",
      "name": "[parameters('connections_documentdb_name')]",
      "apiVersion": "2016-06-01",
      "location": "northeurope",
      "scale": null,
      "properties": {
        "displayName": "cqrs",
        "customParameterValues": {},
        "api": {
          "id": "[concat('/subscriptions/48907828-43c9-4318-b511-33933c6de1ad/providers/Microsoft.Web/locations/northeurope/managedApis/', parameters('connections_documentdb_name'))]"
        }
      },
      "dependsOn": []
    },
    {
      "comments": "Generalized from resource: '/subscriptions/48907828-43c9-4318-b511-33933c6de1ad/resourceGroups/RG_Serverless_CQRS/providers/Microsoft.Web/serverfarms/NorthEuropePlan'.",
      "type": "Microsoft.Web/serverfarms",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      },
      "kind": "functionapp",
      "name": "[parameters('serverfarms_NorthEuropePlan_name')]",
      "apiVersion": "2016-09-01",
      "location": "North Europe",
      "scale": null,
      "properties": {
        "name": "[parameters('serverfarms_NorthEuropePlan_name')]",
        "workerTierName": null,
        "adminSiteName": null,
        "hostingEnvironmentProfile": null,
        "perSiteScaling": false,
        "reserved": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0
      },
      "dependsOn": []
    },
    {
      "comments": "Generalized from resource: '/subscriptions/48907828-43c9-4318-b511-33933c6de1ad/resourceGroups/RG_Serverless_CQRS/providers/Microsoft.Web/sites/CqrsFunctionApp'.",
      "type": "Microsoft.Web/sites",
      "kind": "functionapp",
      "name": "[parameters('sites_CqrsFunctionApp_name')]",
      "apiVersion": "2016-08-01",
      "location": "North Europe",
      "scale": null,
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(parameters('sites_CqrsFunctionApp_name'),'cqrsfunctionapp.azurewebsites.net')]",
            "sslState": "Disabled",
            "virtualIP": null,
            "thumbprint": null,
            "toUpdate": null,
            "hostType": "Standard"
          },
          {
            "name": "[concat(parameters('sites_CqrsFunctionApp_name'),'cqrsfunctionapp.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "virtualIP": null,
            "thumbprint": null,
            "toUpdate": null,
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_NorthEuropePlan_name'))]",
        "reserved": false,
        "siteConfig": null,
        "scmSiteAlsoStopped": false,
        "hostingEnvironmentProfile": null,
        "clientAffinityEnabled": false,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 1536,
        "dailyMemoryTimeQuota": 0,
        "cloningInfo": null
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_NorthEuropePlan_name'))]"
      ]
    },
    {
      "comments": "Generalized from resource: '/subscriptions/48907828-43c9-4318-b511-33933c6de1ad/resourceGroups/RG_Serverless_CQRS/providers/Microsoft.Web/sites/CqrsFunctionApp/config/web'.",
      "type": "Microsoft.Web/sites/config",
      "name": "[concat(parameters('sites_CqrsFunctionApp_name'), '/', parameters('config_web_name'))]",
      "apiVersion": "2016-08-01",
      "location": "North Europe",
      "scale": null,
      "properties": {
        "numberOfWorkers": 1,
        "defaultDocuments": [
          "Default.htm",
          "Default.html",
          "Default.asp",
          "index.htm",
          "index.html",
          "iisstart.htm",
          "default.aspx",
          "index.php"
        ],
        "netFrameworkVersion": "v4.0",
        "phpVersion": "5.6",
        "pythonVersion": "",
        "nodeVersion": "",
        "linuxFxVersion": "",
        "requestTracingEnabled": false,
        "remoteDebuggingEnabled": false,
        "remoteDebuggingVersion": null,
        "httpLoggingEnabled": false,
        "logsDirectorySizeLimit": 35,
        "detailedErrorLoggingEnabled": false,
        "publishingUsername": "$CqrsFunctionApp",
        "publishingPassword": null,
        "appSettings": null,
        "metadata": null,
        "connectionStrings": null,
        "machineKey": null,
        "handlerMappings": null,
        "documentRoot": null,
        "scmType": "None",
        "use32BitWorkerProcess": true,
        "webSocketsEnabled": false,
        "alwaysOn": false,
        "javaVersion": null,
        "javaContainer": null,
        "javaContainerVersion": null,
        "appCommandLine": "",
        "managedPipelineMode": "Integrated",
        "virtualApplications": [
          {
            "virtualPath": "/",
            "physicalPath": "site\\wwwroot",
            "preloadEnabled": false,
            "virtualDirectories": null
          }
        ],
        "winAuthAdminState": 0,
        "winAuthTenantState": 0,
        "customAppPoolIdentityAdminState": false,
        "customAppPoolIdentityTenantState": false,
        "runtimeADUser": null,
        "runtimeADUserPassword": null,
        "loadBalancing": "LeastRequests",
        "routingRules": [],
        "experiments": {
          "rampUpRules": []
        },
        "limits": null,
        "autoHealEnabled": false,
        "autoHealRules": null,
        "tracingOptions": null,
        "vnetName": "",
        "siteAuthEnabled": false,
        "siteAuthSettings": {
          "enabled": null,
          "unauthenticatedClientAction": null,
          "tokenStoreEnabled": null,
          "allowedExternalRedirectUrls": null,
          "defaultProvider": null,
          "clientId": null,
          "clientSecret": null,
          "issuer": null,
          "allowedAudiences": null,
          "additionalLoginParams": null,
          "isAadAutoProvisioned": false,
          "googleClientId": null,
          "googleClientSecret": null,
          "googleOAuthScopes": null,
          "facebookAppId": null,
          "facebookAppSecret": null,
          "facebookOAuthScopes": null,
          "twitterConsumerKey": null,
          "twitterConsumerSecret": null,
          "microsoftAccountClientId": null,
          "microsoftAccountClientSecret": null,
          "microsoftAccountOAuthScopes": null
        },
        "cors": {
          "allowedOrigins": [
            "https://functions.azure.com",
            "https://functions-staging.azure.com",
            "https://functions-next.azure.com"
          ]
        },
        "push": null,
        "apiDefinition": null,
        "autoSwapSlotName": null,
        "localMySqlEnabled": false,
        "managedServiceIdentityId": null,
        "ipSecurityRestrictions": null
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('sites_CqrsFunctionApp_name'))]"
      ]
    },
    {
      "comments": "Generalized from resource: '/subscriptions/48907828-43c9-4318-b511-33933c6de1ad/resourceGroups/RG_Serverless_CQRS/providers/Microsoft.Web/sites/CqrsFunctionApp/hostNameBindings/cqrsfunctionapp.azurewebsites.net'.",
      "type": "Microsoft.Web/sites/hostNameBindings",
      "name": "[concat(parameters('sites_CqrsFunctionApp_name'), '/', parameters('hostNameBindings_cqrsfunctionapp.azurewebsites.net_name'))]",
      "apiVersion": "2016-08-01",
      "location": "North Europe",
      "scale": null,
      "properties": {
        "siteName": "CqrsFunctionApp",
        "domainId": null,
        "hostNameType": "Verified"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('sites_CqrsFunctionApp_name'))]"
      ]
    }
  ]
}